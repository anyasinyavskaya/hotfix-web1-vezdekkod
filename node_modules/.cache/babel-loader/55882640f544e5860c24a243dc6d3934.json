{"ast":null,"code":"var _jsxFileName = \"/home/anna/\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438/hotfix.web/src/panels/Orders.js\";\nimport React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport refresh from \"../img/refresh-button.svg\";\nimport './orders.css';\n\nconst Orders = ({\n  order,\n  orderStatuses,\n  foodAreas,\n  setFinishedOrder,\n  setActiveOrder\n}) => {\n  const activeOrders = useMemo(() => {\n    const activeOrdersList = Object.keys(orderStatuses).filter(shopId => orderStatuses[shopId] === 'ACTIVE').map(shopId => shopId);\n    const result = [];\n    const activeOrdersSet = new Set(activeOrdersList);\n    foodAreas.forEach(area => {\n      area.items.forEach(item => {\n        if (activeOrdersSet.has(item.id)) {\n          const data = {\n            placeId: area.id,\n            placeName: area.name,\n            shopId: item.id,\n            shopName: item.name,\n            price: item.foods.reduce((result, food) => {\n              if (food.id in order) {\n                const {\n                  item: {\n                    price\n                  },\n                  count\n                } = order[food.id];\n                return result + parseInt(price) * parseInt(count);\n              }\n\n              return result;\n            }, 0),\n            link: `/order/${area.id}/${item.id}`\n          };\n          result.push(data);\n        }\n      });\n    });\n    return result;\n  }, [order, orderStatuses, foodAreas]);\n  const finishedOrders = useMemo(() => {\n    const activeOrdersList = Object.keys(orderStatuses).filter(shopId => orderStatuses[shopId] !== 'ACTIVE').map(shopId => shopId);\n    const result = [];\n    const activeOrdersSet = new Set(activeOrdersList);\n    foodAreas.forEach(area => {\n      area.items.forEach(item => {\n        if (activeOrdersSet.has(item.id)) {\n          const data = {\n            placeName: area.name,\n            shopName: item.name,\n            shopId: item.id,\n            price: item.foods.reduce((result, food) => {\n              if (food.id in order) {\n                const {\n                  item: {\n                    price\n                  },\n                  count\n                } = order[food.id];\n                return result + parseInt(price) * parseInt(count);\n              }\n\n              return result;\n            }, 0),\n            link: `/order/${area.id}/${item.id}`\n          };\n          result.push(data);\n        }\n      });\n    });\n    return result;\n  }, [order, orderStatuses, foodAreas]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Orders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"Orders__active-orders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, activeOrders.map(order => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"Orders__active-order\",\n    key: order.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Orders__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"Orders__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, order.placeName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Orders__shop-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, order.shopName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Orders__price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \"\\u0421\\u0443\\u043C\\u043C\\u0430 \", order.price, \" - \\u041E\\u043F\\u043B\\u0430\\u0447\\u0435\\u043D\\u043E\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Orders__time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"~ 15 \\u041C\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"Orders__change\",\n    to: `/place/${order.placeId}/${order.shopId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, \"\\u0418\\u0437\\u043C\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"Orders__cancel\",\n    onClick: () => {\n      setFinishedOrder({\n        itemId: order.shopId\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, \"\\u041E\\u0442\\u043C.\")))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"Orders__finished-orders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, finishedOrders.map(order => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"Orders__finished-order\",\n    key: order.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Orders__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"Orders__header Orders__dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, order.placeName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Orders__shop-name Orders__pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, order.shopName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Orders__price Orders__pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, \"\\u0421\\u0443\\u043C\\u043C\\u0430 \", order.price, \" - \\u041E\\u043F\\u043B\\u0430\\u0447\\u0435\\u043D\\u043E\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"Orders__repeat\",\n    onClick: () => {\n      setActiveOrder({\n        itemId: order.shopId\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"Orders__refresh\",\n    alt: \"repeat order\",\n    src: refresh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nOrders.defaultProps = {\n  setFinishedOrder: () => {},\n  setActiveOrder: () => {}\n};\nexport default Orders;","map":{"version":3,"sources":["/home/anna/Загрузки/hotfix.web/src/panels/Orders.js"],"names":["React","useMemo","Link","Orders","order","orderStatuses","foodAreas","setFinishedOrder","setActiveOrder","activeOrders","activeOrdersList","Object","keys","filter","shopId","map","result","activeOrdersSet","Set","forEach","area","items","item","has","id","data","placeId","placeName","name","shopName","price","foods","reduce","food","count","parseInt","link","push","finishedOrders","itemId","refresh","defaultProps"],"mappings":"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","sourcesContent":["import React, {useMemo} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport refresh from '../img/refresh-button.svg';\nimport './orders.css';\n\n\nconst Orders = ({order, orderStatuses, foodAreas, setFinishedOrder, setActiveOrder}) => {\n    const activeOrders = useMemo(() => {\n        const activeOrdersList = Object.keys(orderStatuses)\n            .filter(shopId => orderStatuses[shopId] === 'ACTIVE')\n            .map(shopId => shopId);\n\n        const result = [];\n        const activeOrdersSet = new Set(activeOrdersList);\n\n        foodAreas.forEach((area) => {\n            area.items.forEach(item => {\n                if (activeOrdersSet.has(item.id)) {\n                    const data = {\n                        placeId: area.id,\n                        placeName: area.name,\n                        shopId: item.id,\n                        shopName: item.name,\n                        price: item.foods.reduce((result, food) => {\n                            if (food.id in order) {\n                                const {item: {price}, count} = order[food.id];\n                                return result + parseInt(price) * parseInt(count);\n                            }\n\n                            return result;\n                        }, 0),\n                        link: `/order/${area.id}/${item.id}`,\n                    };\n\n                    result.push(data);\n                }\n            });\n        });\n\n        return result;\n    }, [order, orderStatuses, foodAreas]);\n\n    const finishedOrders = useMemo(() => {\n        const activeOrdersList = Object.keys(orderStatuses)\n            .filter(shopId => orderStatuses[shopId] !== 'ACTIVE')\n            .map(shopId => shopId);\n\n        const result = [];\n        const activeOrdersSet = new Set(activeOrdersList);\n\n        foodAreas.forEach((area) => {\n            area.items.forEach(item => {\n                if (activeOrdersSet.has(item.id)) {\n                    const data = {\n                        placeName: area.name,\n                        shopName: item.name,\n                        shopId: item.id,\n                        price: item.foods.reduce((result, food) => {\n                            if (food.id in order) {\n                                const {item: {price}, count} = order[food.id];\n\n                                return result + parseInt(price) * parseInt(count);\n                            }\n\n                            return result;\n                        }, 0),\n                        link: `/order/${area.id}/${item.id}`,\n                    };\n\n                    result.push(data);\n                }\n            });\n        });\n\n        return result;\n    }, [order, orderStatuses, foodAreas]);\n\n    return (\n        <div className=\"Orders\">\n            <ul className=\"Orders__active-orders\">\n                {activeOrders.map(order => (\n                    <li\n                        className=\"Orders__active-order\"\n                        key={order.link}\n                    >\n                        <div className=\"Orders__left\">\n                            <h3 className=\"Orders__header\">{order.placeName}</h3>\n                            <p className=\"Orders__shop-name\">{order.shopName}</p>\n                            <p className=\"Orders__price\">Сумма {order.price} - Оплачено</p>\n                        </div>\n                        <div className=\"Orders__time\">\n                            ~ 15 М\n                        </div>\n                        <Link\n                            className=\"Orders__change\"\n                            to={`/place/${order.placeId}/${order.shopId}`}\n                        >\n                            Изм\n                        </Link>\n                        <button\n                            className=\"Orders__cancel\"\n                            onClick={() => {\n                                setFinishedOrder({itemId: order.shopId});\n                            }}\n                        >\n                            Отм.\n                        </button>\n                    </li>\n                ))}\n            </ul>\n            <ul className=\"Orders__finished-orders\">\n                {finishedOrders.map(order => (\n                    <li\n                        className=\"Orders__finished-order\"\n                        key={order.link}\n                    >\n                        <div className=\"Orders__left\">\n                            <h3 className=\"Orders__header Orders__dark\">{order.placeName}</h3>\n                            <p className=\"Orders__shop-name Orders__pink\">{order.shopName}</p>\n                            <p className=\"Orders__price Orders__pink\">Сумма {order.price} - Оплачено</p>\n                        </div>\n                        <button\n                            className=\"Orders__repeat\"\n                            onClick={() => {\n                                setActiveOrder({itemId: order.shopId});\n                            }}\n                        >\n                            <img\n                                className=\"Orders__refresh\"\n                                alt=\"repeat order\"\n                                src={refresh}\n                            />\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nOrders.defaultProps = {\n    setFinishedOrder: () => {\n    },\n    setActiveOrder: () => {\n    },\n};\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}